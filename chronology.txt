General order to do thing in (and a timeframe):

jan. - Define an initial database model necessary for tracking entanglements. (done)
jan. - Define an initial database model necessary for tracking shipstrikes.
jan. - Implement the entanglement model and a usable interface.
feb. - Refine the entanglement models and interface upon feedback.
feb. - Implement the shipstrike model (and interface).
feb. - Refine the shipstrike models and interface upon feedback.
by mar. 1st - Database "goes live": begins actually storing entanglement data on a
     properly backed-up server.
mar? - import data from old MS-Access entanglement databases
mar? - begin storing shipstrike data
apr? - implement importation of data from national databases
may? - new interface features, particularly mapping of locations.
jun/jul? - extension to strandings?

TODO in order of importance:

CSRF protections
    http://docs.djangoproject.com/en/1.2/ref/contrib/csrf/#ref-contrib-csrf
Contact-editing should work!
JS on gear-type widgets
    check/uncheck all boxes for the same type at once
    grey-out implied geartypes
list of recent stuff (on homepage)
undated cases are considered most recent in sorting
selected taxon should be clear
    in IE!
    make search box disappear
'observer on land' fake field for vessels marked as 'land'
IE doesn't show table-sort arrows
secure contacts table
    boat name
    home port
make observation editing page more intuitive
file attachements for cases, observations
deletion!
    with warnings
case merging!
contacts/animals management.
    prompt for deletion when they are no longer referred to by cases/observations
serious-injury-determination fields
use ITIS numbers in Taxon management
    import from ITIS
add icons for actions
date-picker widget for non-uncertain dates
make clear what the vessel-info fields are that are hidden
administrative page for cleaning up animals with no cases.
administrative page for cleaning up cases with no observations.
administrative page for duplicate contacts
administrative page for cleaning up GearOwner objects with no info.
administrative page for cleaning up DateTime/Location objects with no info.
case-list sorts by case (most recent first)
make subclass the DateTimeField instead of using the DateTime app
google-charts venn-diagram for gear-types

git hosting at NOAA
directions for successor

